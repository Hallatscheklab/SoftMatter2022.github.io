{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "90127d80-9644-4ec9-9dab-aaf4043cbc05",
   "metadata": {},
   "source": [
    "# Scattering Techniques for Polymer Conformation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d2b81179-22ee-47ec-99e8-0de49c26fbb4",
   "metadata": {},
   "source": [
    "The scattering of electromagnetic or matter waves is a commonly used tool to obtain information about the conformation of polymer chains. Light wave, X-rays (SAXS) but also neutrons (SANS) are used to study polymer solutions. While all waves have their own pecularities, they are all based on the intereference of partial waves scattered at different segments of the polymer."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "39e913ed-5b81-4d82-b8d1-5a8bc56b8b8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from numpy.linalg import norm\n",
    "from scipy.constants import c,epsilon_0,e,physical_constants\n",
    "import json\n",
    "\n",
    "%config InlineBackend.figure_format = 'retina' \n",
    "\n",
    "with open('style.json', 'r') as fp:\n",
    "    style = json.load(fp)\n",
    "    \n",
    "plt.rcParams.update(style) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0763856d-217b-4584-99bd-2460fe933a88",
   "metadata": {},
   "source": [
    "A solution of different polymer chains (assume its dilute) has different length scales involved. There is an average distance between the polymer chains which is large as compared to the polymer size. Waves that interfere when being scattered from different polymers reflect the structure of the solution and is commonly addressed in a scattering quantity, which is the **structure factor**. Waves that are scattered by the same chain and interfer are a measure of the polymer conformation and described by the **form factor**. Yet, this scale seperation might not always be possible in dense polymer solutions."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8726adde-9141-4819-ab27-05503b6c88a9",
   "metadata": {},
   "source": [
    "## Form Factor"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d8da4124-8992-4966-a1b3-f137b4d1c120",
   "metadata": {},
   "source": [
    "We would like to consider the form factor only, which gives us information on the polymer conformation. We have an incident plane wave with the wave vector $\\vec{q}_i$ which is falling on our polymer chain. The wavevector has a direction and magnitude according to \n",
    "\n",
    "$$\n",
    "\\vec{q}_i=\\frac{2\\pi}{\\lambda}\\vec{u}_i\n",
    "$$\n",
    "\n",
    "where $\\lambda$ is the wavelength. Note that you should take care of the corresponding refractive index $n$ in the case of light scattering ($\\lambda=\\lambda_0/n$). We will neglect the refractive index in the following, as it does not change the qualitative results. \n",
    "\n",
    "**image with vectors**\n",
    "\n",
    "The scattered light is then observed in a different direction, e.g. along the direction $\\vec{u}_s$, which results in a scattered wavevector $\\vec{q}_s$. Considering now the scattered wave from two segments of the polymer at $\\vec{R}_i$ and $\\vec{R}_j$ results in a path length difference $\\Delta$ between the two waves, that is given by the indcident wave path different and the scattered wave path difference.\n",
    "\n",
    "$$\n",
    "\\Delta = \\vec{u}_i\\cdot \\vec{R}_j - \\vec{u}_s\\cdot \\vec{R}_j=(\\vec{u}_i-\\vec{u}_s)\\cdot \\vec{R}_j\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\varphi_{j}=\\frac{2 \\pi}{\\lambda}\\left(\\vec{u}_{\\mathrm{i}}-\\vec{u}_{\\mathrm{s}}\\right) \\cdot \\vec{R}_{j}=\\left(\\vec{q}_{\\mathrm{i}}-\\vec{q}_{\\mathrm{s}}\\right) \\cdot \\vec{R}_{j}=\\vec{q} \\cdot \\vec{R}_{j}\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "\\left|\\vec{q}_{i}\\right|=\\left|\\vec{q}_{s}\\right|=\\frac{2 \\pi}{\\lambda}\n",
    "$$\n",
    "\n",
    "$$\n",
    "q \\equiv|\\vec{q}|=2\\left|\\vec{q}_{i}\\right| \\sin \\left(\\frac{\\theta}{2}\\right)=\\frac{4 \\pi}{\\lambda} \\sin \\left(\\frac{\\theta}{2}\\right)\n",
    "$$\n",
    "\n",
    "$$\n",
    "E_{\\mathrm{s}}=E_{\\mathrm{i}} \\sum_{j=1}^{N} A \\cos \\left(2 \\pi \\nu t-\\varphi_{j}\\right)\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\begin{aligned}\n",
    "I_{\\mathrm{s}} &=2 I_{\\mathrm{i}} A^{2} \\nu \\int_{0}^{1 / \\nu}\\left[\\sum_{j=1}^{N} \\cos \\left(2 \\pi \\nu t-\\varphi_{j}\\right)\\right]^{2} \\mathrm{~d} t \\\\\n",
    "&=2 I_{\\mathrm{i}} A^{2} \\nu \\int_{0}^{1 / \\nu}\\left[\\sum_{j=1}^{N} \\sum_{k=1}^{N} \\cos \\left(2 \\pi \\nu t-\\varphi_{j}\\right) \\cos \\left(2 \\pi \\nu t-\\varphi_{k}\\right)\\right] \\mathrm{d} t \\\\\n",
    "&=I_{\\mathrm{i}} A^{2} \\nu \\int_{0}^{1 / \\nu}\\left[\\sum_{j=1}^{N} \\sum_{k=1}^{N}\\left(\\cos \\left(4 \\pi \\nu t-\\varphi_{j}-\\varphi_{k}\\right)+\\cos \\left(\\varphi_{k}-\\varphi_{j}\\right)\\right)\\right] \\mathrm{d} t\n",
    "\\end{aligned}\n",
    "$$\n",
    "\n",
    "$$\n",
    "I_{s}(\\vec{q})=\\underbrace{I_{i} A^{2} N^{2}}_{I_{s}(0)} \\underbrace{\\frac{1}{N^{2}} \\sum_{k=1}^{N} \\sum_{j=1}^{N} \\cos \\left(\\varphi_{k}-\\varphi_{j}\\right)}_{P(\\vec{q})}\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(\\vec{q}) \\equiv \\frac{I_{\\mathrm{s}}(\\vec{q})}{I_{\\mathrm{s}}(0)}\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(\\vec{q})=\\frac{1}{N^{2}} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\cos \\left[\\vec{q} \\cdot\\left(\\vec{R}_{i}-\\vec{R}_{j}\\right)\\right]\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\left\\langle\\cos \\left[\\vec{q} \\cdot\\left(\\vec{R}_{i}-\\vec{R}_{j}\\right)\\right]\\right\\rangle=\\frac{1}{4 \\pi} \\int_{0}^{2 \\pi}\\left[\\int_{0}^{\\pi} \\cos \\left(q R_{i j} \\cos \\alpha\\right) \\sin \\alpha \\mathrm{d} \\alpha\\right] \\mathrm{d} \\beta\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "\\vec{q} \\cdot\\left(\\vec{R}_{i}-\\vec{R}_{j}\\right)=q R_{i j} \\cos \\alpha\n",
    "$$\n",
    "\n",
    "$$\n",
    "\\left(\\cos \\left[\\vec{q} \\cdot\\left(\\vec{R}_{i}-\\vec{R}_{j}\\right)\\right]\\right\\rangle=\\frac{1}{2} \\int_{-1}^{1} \\cos \\left(q R_{i j} x\\right) \\mathrm{d} x=\\frac{\\sin \\left(q R_{i j}\\right)}{q R_{i j}}\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(q)=\\frac{1}{N^{2}} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\frac{\\sin \\left(q R_{i j}\\right)}{q R_{i j}}\n",
    "$$\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2c40448f-589b-4be6-b837-022fea2c3a9f",
   "metadata": {},
   "source": [
    "## Radius of Gyration"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b088a58f-5dcc-422d-92a8-7a6297558282",
   "metadata": {},
   "source": [
    "$$\n",
    "\\frac{\\sin x}{x}=1-\\frac{x^{2}}{3 !}+\\frac{x^{4}}{5 !}-\\cdots\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "P(q)=1-\\frac{q^{2}}{6 N^{2}} \\sum_{i=1}^{N} \\sum_{j=1}^{N} R_{i j}^{2}+\\cdots \\quad \\text { for } q R_{g}<1\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(q)=1-\\frac{1}{3} q^{2}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle+\\cdots \\quad \\text { for } q R_{\\mathrm{g}}<1\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(q)=1-\\frac{16 \\pi^{2} n^{2}}{3 \\lambda^{2}}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle \\sin ^{2}\\left(\\frac{\\theta}{2}\\right)+\\cdots\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(q) \\cong \\exp \\left(-\\frac{q^{2} R_{\\mathrm{g}}^{2}}{3}\\right) \\quad \\text { for } q R_{\\mathrm{g}}<1\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4861ed02-0a62-4e0b-8eca-80ca05cee18b",
   "metadata": {},
   "source": [
    "## Debye Function\n",
    "\n",
    "$$\n",
    "p(R_{i j} ; \\underbrace{|i-j|}_{N}) d R_{i j}=\\left(\\frac{3}{2 \\pi|i-j| b^{2}}\\right)^{\\frac{3}{2}} e^{-3 R^{2}\\left(2|i-j| b^{2}\\right)} 4 \\pi R_{i j}^{2} d R_{i j}\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "P(q)=\\frac{1}{N^{2}} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\int_{0}^{\\infty} \\frac{\\sin \\left(q R_{i j}\\right)}{q R_{i j}} P\\left(R_{i j},|i-j|\\right) 4 \\pi R_{i j}^{2} \\mathrm{~d} R_{i j}=\\frac{1}{N^{2}} \\sum_{i=1}^{N} \\sum_{j=1}^{N} \\exp \\left(-\\frac{q^{2} b^{2}|i-j|}{6}\\right)\n",
    "$$\n",
    "\n",
    "$$\n",
    "P(q)=\\frac{2}{\\left(q^{2}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle\\right)^{2}}\\left[\\exp \\left(-q^{2}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle\\right)-1+q^{2}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle\\right]\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "P(q) \\cong\\left(1-\\frac{q^{2}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle}{3}+\\cdots\\right) \\quad \\text { for } q \\sqrt{\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle}<1\n",
    "$$\n",
    "\n",
    "\n",
    "$$\n",
    "P(q) \\cong \\frac{2}{q^{2}\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle} \\quad \\text { for } q \\sqrt{\\left\\langle R_{\\mathrm{g}}^{2}\\right\\rangle}>1\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b1f2507a-c902-4bb8-ba57-8b61292f7f89",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
