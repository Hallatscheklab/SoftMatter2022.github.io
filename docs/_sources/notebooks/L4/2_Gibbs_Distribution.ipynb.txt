{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Gibbs Distribution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "So far we have considered closed systems and derived and studied the Boltzmann distribution.  Now our systems are open the particle number might change. The Boltzmann distribution is therefore not anymore sufficient."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\\begin{equation}\n",
    "\\frac{p(E_{s}^{(1)},N_s^{(1)})}{p(E_{s}^{(2)},N_s^{(2)})}=\\frac{W_r(E_{tot}-E_s^{(1)},N_{tot}^{(1)})}{W_r(E_{tot}-E_s^{(2)},N_{tot}^{(2)})}\n",
    "\\end{equation}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Hereby, the $E_{s}^{(i)}, N_s^{(i)}$ denote the energy and the number of particles in the system. The $W_{r}$ indicate the number of available states to the reservoir, when the system is in a specific energy state with a specific number of particles. \n",
    "Similar to the derivation of the Boltzmann distribution we can now assert, that the total number of available states of the system plut reservoir is given by\n",
    "\n",
    "\\begin{equation}\n",
    "W_{tot}(E_{tot}-E_{s}^{(1)},N_{tot}-N_{s}^{(1)})=1\\times W_{r}(E_{tot}-E_{s}^{(1)},N_{tot}-N_{s}^{(1)})\n",
    "\\end{equation}\n",
    "\n",
    "and using again $S=k_B \\ln(W)$ or $W=\\exp(S/k_B)$ we find\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{W_r^{(1)}}{W_r^{(2)}}=\\frac{\\exp(S_r^{(1)}/k_B )}{\\exp(S_r^{(2)}/k_B)}\n",
    "\\end{equation}\n",
    "\n",
    "We can now use a first order expansion again to get \n",
    "\n",
    "\\begin{equation}\n",
    "S_{r}(E_{tot}-E_{s},N_{tot}-N_s)\\approx S_{r}(E_{tot},N_{tot})-\\frac{\\partial S_{r}}{\\partial E}E_{s}-\\frac{\\partial S_{r}}{\\partial N}E_{N_s}\n",
    "\\end{equation}\n",
    "\n",
    "The partial derivatives can be converted with the help of the known thermodynamic relations \n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{\\partial S_{r}}{\\partial E}\\bigg|_{V,N} =\\frac{1}{T}\n",
    "\\end{equation}\n",
    "\n",
    "and\n",
    "\n",
    "\\begin{equation}\n",
    "\\frac{\\partial S_{r}}{\\partial N}\\bigg|_{V,E}=-\\frac{\\mu}{T}\n",
    "\\end{equation}\n",
    "\n",
    "which finally yields the Gibbs distribution:\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "<div class=\"alert alert-warning\">\n",
    "    \n",
    "**Gibbs-distribution**\n",
    "    \n",
    "\n",
    "\\begin{equation}\n",
    "p(E_{s}^{(1)},N_s^{(1)})=\\frac{1}{Z}\\exp\\left ( -\\frac{E_{s}^{(1)}-\\mu N_{s}^{(1)} }{k_B T} \\right )\n",
    "\\end{equation}\n",
    "\n",
    "with the **grand partition function**\n",
    "\n",
    "\\begin{equation}\n",
    "Z=\\sum_{i}\\exp \\left ( -\\frac{E_{s}^{(i)}-\\mu N_{s}^{(i)}}{k_B T}\\right )\n",
    "\\end{equation}\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-info\">\n",
    "    \n",
    "**Ligand Binding**    \n",
    "\n",
    "As an example, we have a look at the binding of a ligand (green) to a receptor, which is indicated in the figure below.\n",
    "    \n",
    "![Two State Binding](img/two_state_binding.png)\n",
    "\n",
    "The binding is reported by the variable $\\sigma$, which can be either 0 or 1. The binding energy is therefore \n",
    "    \n",
    "\\begin{equation}\n",
    "E=\\sigma \\varepsilon_b\n",
    "\\end{equation}\n",
    "\n",
    "with $\\varepsilon_b<0$, since the ligand wants to bind. The grand partition function can therefore be written as\n",
    "    \n",
    "\\begin{equation}    \n",
    "Z=\\sum_{\\rm states}=\\exp\\left ( -\\beta (E_{\\rm state}- \\mu N_{\\rm state}) \\right )\n",
    "\\end{equation}\n",
    "\n",
    "\n",
    "in which the chemical potential $\\mu$ reflects the contact with the particle reservoir.\n",
    "    \n",
    "\\begin{equation}    \n",
    "Z=\\sum_{\\sigma=0}^{1}=\\exp\\left ( -\\beta (\\varepsilon_b \\sigma- \\mu \\sigma) \\right )=1+\\exp(-\\beta (\\varepsilon_b -\\mu ))\n",
    "\\end{equation}\n",
    "\n",
    "From that we can calculate the mean bounda ligands to  be\n",
    "    \n",
    "\\begin{equation}    \n",
    "\\langle N \\rangle =\\frac{\\exp(-\\beta (\\varepsilon_b -\\mu ))}{1+\\exp(-\\beta (\\varepsilon_b -\\mu ))}\n",
    "\\end{equation}  \n",
    "    \n",
    "Using \n",
    "    \n",
    "\\begin{equation}\n",
    "\\mu = \\mu_0 + k_B T \\ln \\left ( \\frac{c}{c_0}\\right )\n",
    "\\end{equation}\n",
    "    \n",
    "we can finally write \n",
    "    \n",
    " \\begin{equation}    \n",
    "\\langle N \\rangle =\\frac{c/c_0 \\exp(-\\beta \\Delta \\varepsilon_b)}{1+\\frac{c}{c_0}\\exp(-\\beta \\Delta \\varepsilon_b)}\n",
    "\\end{equation}    \n",
    "    \n",
    "with $\\Delta \\varepsilon=\\varepsilon_b-\\mu_0$, which is the energy freed when taking the ligand from the solution and placing it at the acceptor.    \n",
    "</div>    "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
